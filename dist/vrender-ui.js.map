{"version":3,"file":"vrender-ui.js","sources":["webpack:///webpack/bootstrap","webpack:///./build/build.js","webpack:///./src/components/group/render.js","webpack:///./src/static/css/style.css?957a","webpack:///./src/static/js/base.js","webpack:///./src/static/js/init.js","webpack:///./src/static/js/items.js","webpack:///./src/static/js/selectable.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./build/build.js\");\n","// 构建\nrequire(\"../src/static/css/style.css\");\n\nrequire(\"../src/static/js/init.js\");\n\nrequire(\"../src/static/js/base.js\");\n\nrequire(\"../src/components/group/render.js\");","// 2019-04-13\n(function (frontend) {\n  if (frontend && VRender.Component.ui.group) return;\n  var UI = frontend ? VRender.Component.ui : require(\"../../static/js/init\");\n  var Utils = UI.util;\n  var VERTICAL = \"vertical\";\n  var HORIZONTIAL = \"horizontial\"; ///////////////////////////////////////////////////////\n\n  var UIGroup = UI.group = function (view, options) {\n    return UI._base.call(this, view, options);\n  };\n\n  var _UIGroup = UIGroup.prototype = new UI._base();\n\n  _UIGroup.setOrientation = function (value) {\n    this.$el.removeClass(HORIZONTIAL).removeClass(VERTICAL);\n    this.$el.removeAttr(\"opt-orientation\");\n\n    if (value === HORIZONTIAL || value === VERTICAL) {\n      this.$el.addClass(value).attr(\"opt-orientation\", value);\n    }\n\n    layoutChanged.call(this);\n  };\n\n  _UIGroup.setGap = function (value) {\n    this.$el.attr(\"opt-gap\", Utils.trimToEmpty(value));\n    layoutChanged.call(this);\n  };\n\n  _UIGroup.setAlign = function (value) {\n    this.$el.attr(\"opt-align\", Utils.trimToEmpty(value));\n    layoutChanged.call(this);\n  };\n\n  _UIGroup.append = function (values) {\n    var _this = this;\n\n    if (!arguments || arguments.length == 0) return this;\n\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      var item = arguments[i];\n\n      if (Utils.isArray(item)) {\n        item.forEach(function (temp) {\n          _this.add(temp);\n        });\n      } else {\n        this.add(item);\n      }\n    }\n\n    return this;\n  };\n\n  _UIGroup.add = function (child, index) {\n    if (Utils.isNotBlank(child)) {\n      index = isNaN(index) || index === \"\" ? -1 : parseInt(index);\n      var children = this.$el.children();\n\n      if (index >= 0 && index < children.length) {\n        children.eq(index).before(child.$el || child);\n      } else {\n        this.$el.append(child.$el || child);\n      }\n\n      layoutChanged.call(this);\n    }\n\n    return child;\n  };\n\n  _UIGroup.removeAt = function (index) {\n    var item = this.$el.children().eq(index).remove();\n    layoutChanged.call(this);\n    return item;\n  }; // ====================================================\n\n\n  var layoutChanged = function layoutChanged() {\n    var _this2 = this;\n\n    Utils.debounce(\"group_layout-\" + this.getViewId(), function () {\n      updateLayout.call(_this2, $, _this2.$el);\n    });\n  }; ///////////////////////////////////////////////////////\n\n\n  var Renderer = function Renderer(context, options) {\n    UI._baseRender.call(this, context, options);\n  };\n\n  var _Renderer = Renderer.prototype = new UI._baseRender();\n\n  _Renderer.render = function ($, target) {\n    UI._baseRender.render.call(this, $, target);\n\n    target.addClass(\"ui-group\");\n    var options = this.options || {};\n    var orientation = options.orientation;\n\n    if (orientation === HORIZONTIAL || orientation === VERTICAL) {\n      target.addClass(orientation);\n      target.attr(\"opt-orientation\", orientation);\n    }\n\n    target.attr(\"opt-gap\", options.gap);\n    target.attr(\"opt-align\", options.align);\n    renderSubViews.call(this, $, target);\n    return this;\n  }; ///////////////////////////////////////////////////////\n\n\n  var renderSubViews = function renderSubViews($, target) {\n    showSubViews.call(this, $, target, getChildren.call(this));\n  };\n\n  var getChildren = function getChildren() {\n    return this.options.children || this.options.subViews || this.options.views;\n  };\n\n  var showSubViews = function showSubViews($, target, children) {\n    children = Utils.toArray(children);\n    Utils.each(children, function (child) {\n      if (Utils.isNotNull(child)) {\n        if (Utils.isFunction(child.render)) child.render(target);else target.append(child.$el || child);\n      }\n    });\n    updateLayout.call(this, $, target);\n  };\n\n  var updateLayout = function updateLayout($, target) {\n    var left = \"\",\n        top = \"\",\n        align = \"\",\n        valign = \"\",\n        display = \"\";\n    var gap = Utils.getFormatSize(target.attr(\"opt-gap\"), this._isRenderAsRem()) || \"\";\n    var orientation = target.attr(\"opt-orientation\");\n\n    if (orientation == HORIZONTIAL) {\n      // display = \"inline-block\";\n      left = gap;\n    } else if (orientation == VERTICAL) {\n      // display = \"block\";\n      top = gap;\n    } else {\n      top = gap;\n    }\n\n    var aligns = target.attr(\"opt-align\") || \"\";\n    aligns = aligns.toLowerCase();\n    if (/left/.test(aligns)) align = \"left\";else if (/center/.test(aligns)) align = \"center\";else if (/right/.test(aligns)) align = \"right\";\n    if (/top/.test(aligns)) valign = \"top\";else if (/middle/.test(aligns)) valign = \"middle\";else if (/bottom/.test(aligns)) valign = \"bottom\";\n    target.css(\"text-align\", align);\n    var children = target.children(); // children.css(\"display\", display);\n\n    children.css(\"vertical-align\", valign);\n    children.css(\"margin-left\", left).css(\"margin-top\", top);\n    children.eq(0).css(\"margin-left\", \"\").css(\"margin-top\", \"\");\n  }; ///////////////////////////////////////////////////////\n\n\n  if (frontend) {\n    window.UIGroup = UIGroup;\n    UI.init(\".ui-group\", UIGroup, Renderer);\n  } else {\n    module.exports = Renderer;\n  }\n})(typeof window !== \"undefined\");","// extracted by mini-css-extract-plugin","// 2019-04-14\n(function (frontend) {\n  if (frontend && VRender.Component.ui._base) return;\n  var UI = frontend ? VRender.Component.ui : require(\"./init\");\n  var Fn = UI.fn;\n  var Utils = UI.util; ///////////////////////////////////////////////////////\n\n  var UICommon = function UICommon() {};\n\n  if (frontend) UICommon.prototype = new VRender.EventEmitter();else UICommon.prototype = new Object();\n  var _UICommon = UICommon.prototype; // 组件原数据（集）适配\n\n  _UICommon._doAdapter = function (data) {\n    return !data ? null : Fn.doAdapter.call(this, data);\n  }; // ----------------------------------------------------\n  // 判断组件是否在应用模式下渲染，一般指移动端渲染\n\n\n  _UICommon._isRenderAsApp = function () {\n    if (frontend) return VRender.ENV.isApp;\n\n    if (!this.hasOwnProperty(\"_isApp\")) {\n      this._isApp = false;\n      if (this.context && Utils.isFunction(this.context.isRenderAsApp)) this._isApp = this.context.isRenderAsApp();\n    }\n\n    return this._isApp;\n  }; // 判断组件是否在 iPhone 中渲染\n\n\n  _UICommon._isRenderAsIphone = function () {\n    if (frontend) return VRender.ENV.isIphone;\n\n    if (!this.hasOwnProperty(\"_isIphone\")) {\n      this._isIphone = false;\n      if (this.context && Utils.isFunction(this.context.isRenderAsIphone)) this._isIphone = this.context.isRenderAsIphone();\n    }\n\n    return this._isIphone;\n  }; // 判断组件是否使用 rem 度量单位\n\n\n  _UICommon._isRenderAsRem = function () {\n    if (frontend) return VRender.ENV.useRem;\n\n    if (!this.hasOwnProperty(\"_isRem\")) {\n      this._isRem = false;\n      if (this.context && Utils.isFunction(this.context.isRenderAsRem)) this._isRem = this.context.isRenderAsRem();\n    }\n\n    return this._isRem;\n  }; // ----------------------------------------------------\n  // 获取该组件的数据（集），已经过适配器转换\n\n\n  _UICommon.getData = function () {\n    this.options.data = this._doAdapter(this.options.data);\n    return this.options.data;\n  }; // 获取数据编号\n\n\n  _UICommon._getDataKey = function (data) {\n    return Fn.getDataKey.call(this, data);\n  }; // 获取数据显示文本\n\n\n  _UICommon._getDataLabel = function (data) {\n    return Fn.getDataLabel.call(this, data);\n  }; ///////////////////////////////////////////////////////\n\n\n  var UIBase = UI._base = function (view, options) {\n    // 通过 new UIBase() 调用时，仅用于子类继承，不执行初始化\n    if (arguments.length > 0) {\n      // 参数 view 不是 Element 或 jQuery 对象时，需要构建组件\n      if (!Fn.isElement(view)) {\n        options = null;\n        view = this._create(view);\n      }\n\n      var instance = VRender.Component.get(view);\n      if (instance) return instance;\n      var target = this.$el = $(view);\n      target.data(VRender.Component.bindName, this);\n      this.options = options || {};\n      this.init(target, this.options);\n      return this;\n    }\n  };\n\n  var _UIBase = UIBase.prototype = new UICommon();\n\n  UIBase.init = function (target, options) {\n    var _this = this;\n\n    doInit.call(this, target, options);\n    setTimeout(function () {\n      tryAutoLoad.call(_this);\n    });\n  };\n\n  UIBase.getInitParams = function () {\n    if (!this.initParams) {\n      var params = null;\n      if (this.options.hasOwnProperty(\"params\")) params = this.options.params;else {\n        try {\n          params = JSON.parse(this.$el.attr(\"api-params\") || null);\n          this.$el.removeAttr(\"api-params\");\n        } catch (e) {}\n      }\n      this.initParams = Utils.extend({}, params);\n    }\n\n    return Utils.extend({}, this.initParams);\n  };\n\n  UIBase.isAutoLoad = function () {\n    if (!this.options.hasOwnProperty(\"autoLoad\")) {\n      this.options.autoLoad = this.$el.attr(\"api-autoload\");\n    }\n\n    this.$el.removeAttr(\"api-autoload\");\n    return Utils.isTrue(this.options.autoLoad);\n  }; // ====================================================\n\n\n  _UIBase.init = function (target, options) {\n    UIBase.init.call(this, target, options);\n  }; // 获取组件的 viewId\n\n\n  _UIBase.getViewId = function () {\n    return this.$el.attr(\"vid\");\n  }; // 获取初始化参数\n\n\n  _UIBase.getInitParams = function () {\n    return UIBase.getInitParams.call(this);\n  }; // ----------------------------------------------------\n  // 设置组件数据（集），一般子类需要负责视图刷新\n\n\n  _UIBase.setData = function (value) {\n    this.options.data = value;\n    this.rerender();\n  }; // 获取、设置数据转换适配器\n\n\n  _UIBase.getDataAdapter = function () {\n    return Fn.getFunction.call(this, \"dataAdapter\", \"adapter\");\n  };\n\n  _UIBase.setDataAdapter = function (value) {\n    this.options.dataAdapter = value;\n    delete this.options.adapter;\n    this.$el.children(\".ui-fn[name='adapter']\").remove();\n    this.rerender();\n  }; // 获取、设置数据绑定映射方法\n\n\n  _UIBase.getDataMapper = function () {\n    return Fn.getFunction.call(this, \"dataMapper\", \"mapper\");\n  };\n\n  _UIBase.setDataMapper = function (value) {\n    this.options.dataMapper = value;\n    delete this.options.mapper;\n    this.$el.children(\".ui-fn[name='mapper']\").remove();\n    this.rerender();\n  }; // 判断组件是否可用\n\n\n  _UIBase.isDisabled = function () {\n    return this.$el.is(\".disabled\");\n  };\n\n  _UIBase.setDisabled = function (disabled) {\n    if (Utils.isNull(disabled) || Utils.isTrue(disabled)) this.$el.addClass(\"disabled\").attr(\"disabled\", \"disabled\");else this.$el.removeClass(\"disabled\").removeAttr(\"disabled\", \"disabled\");\n  }; // 设置组件是否可见（显示或隐藏）\n\n\n  _UIBase.setVisible = function (visible) {\n    if (Utils.isNull(visible) || Utils.isTrue(visible)) this.$el.removeClass(\"ui-hidden\");else this.$el.addClass(\"ui-hidden\");\n  }; // ----------------------------------------------------\n  // 销毁组件\n\n\n  _UIBase.destory = function () {\n    this.$el.remove();\n  }; // 重新渲染组件\n\n\n  _UIBase.rerender = function () {// do nothing\n  };\n\n  _UIBase.isMounted = function () {\n    return $(\"body\").find(this.$el).length > 0;\n  };\n\n  _UIBase._snapshoot = function () {\n    return Fn.snapshoot.call(this);\n  };\n\n  _UIBase._getScrollContainer = function () {\n    return this.$el.attr(\"opt-box\");\n  }; // ----------------------------------------------------\n  // 异步数据加载方法\n\n\n  _UIBase.load = function (api, params, callback) {\n    var _this2 = this;\n\n    if (Utils.isFunction(this._loadBefore)) this._loadBefore(api, params);\n    return Fn.load.call(this, api, params, function (err, data) {\n      if (!err) {\n        if (Utils.isFunction(_this2.setData)) _this2.setData(data);else _this2.options.data = data;\n      }\n\n      setTimeout(function () {\n        if (Utils.isFunction(_this2._loadAfter)) _this2._loadAfter(err, data);\n        if (Utils.isFunction(callback)) callback(err, data);\n\n        _this2.trigger(\"loaded\", err, data);\n      });\n    });\n  }; // 重新加载异步数据\n\n\n  _UIBase.reload = function (page, callback) {\n    if (Utils.isFunction(page)) {\n      callback = page;\n      page = null;\n    }\n\n    var params = this.lastLoadParams || {};\n\n    if (!isNaN(page) && page > 0) {\n      params.p_no = page;\n    }\n\n    return this.load(this.lastLoadApi, params, callback);\n  }; // 判断是否正在加载\n\n\n  _UIBase.isLoading = function () {\n    return this.$el.is(\".is-loading\");\n  }; ///////////////////////////////////////////////////////\n\n\n  var Renderer = UI._baseRender = function (context, options) {\n    this.context = !options ? null : context;\n    this.options = (!options ? context : options) || {};\n  };\n\n  var _Renderer = Renderer.prototype = new UICommon(); // ====================================================\n  // 通用组件渲染方法，子组件继承后可直接使用\n\n\n  Renderer.render = function ($, target) {\n    this.renderData($, target);\n    Fn.renderFunction.call(this, target, \"adapter\", this.getDataAdapter());\n    Fn.renderFunction.call(this, target, \"mapper\", this.getDataMapper());\n  }; // ====================================================\n  // 基本组件渲染\n\n\n  _Renderer.render = function ($, target) {\n    Renderer.render.call(this, $, target);\n    return this;\n  }; // 渲染组件设置的数据，仅映射后的数据被渲染\n\n\n  _Renderer.renderData = function ($, target) {\n    Fn.renderData.call(this, target, this.getData());\n  }; // ----------------------------------------------------\n  // 获取数据转换适配器\n\n\n  _Renderer.getDataAdapter = function () {\n    return this.options.dataAdapter || this.options.adapter;\n  }; // 获取数据属性映射方法\n\n\n  _Renderer.getDataMapper = function () {\n    return this.options.dataMapper || this.options.mapper;\n  }; // 获取映射后的属性对象\n\n\n  _Renderer.getMapData = function (data) {\n    return Fn.getMapData.call(this, data);\n  }; // ====================================================\n  // 初始化\n\n\n  var doInit = function doInit(target, options) {\n    target.attr(\"id\", Utils.trimToNull(options.id) || undefined);\n    target.attr(\"name\", Utils.trimToNull(options.name) || undefined);\n    var cls = options.className || options.cls;\n    if (Utils.isNotBlank(cls)) target.addClass(cls);\n    if (Utils.isNotBlank(options.style)) target.addClass(options.style);\n    if (options.hasOwnProperty(\"disabled\")) this.setDisabled(Utils.isTrue(options.disabled));\n    if (options.visible === false || options.visible === \"gone\") target.css(\"display\", \"none\");else if (options.visible === \"hidden\") target.css(\"visibility\", \"hidden\");\n    target.attr(\"ref\", Utils.trimToNull(options.ref) || undefined);\n\n    if (!options.data) {\n      var items = target.attr(\"data-items\");\n\n      if (items) {\n        try {\n          options.data = JSON.parse(unescape(items));\n        } catch (e) {}\n      }\n    }\n\n    this.$el.removeAttr(\"data-items\");\n  }; // 组件初始化时，视图自动加载异步数据\n\n\n  var tryAutoLoad = function tryAutoLoad() {\n    var _this3 = this;\n\n    if (UIBase.isAutoLoad.call(this) && Utils.isFunction(this.load)) {\n      var apiName = this.options.api || this.$el.attr(\"api-name\");\n      var params = $.extend({}, this.getInitParams());\n      var pager = Utils.isFunction(this.getPaginator) && this.getPaginator();\n\n      if (pager) {\n        if (!params.p_no && Utils.isFunction(pager.getPage)) params.p_no = pager.getPage();\n        if (!params.p_size && Utils.isFunction(pager.getSize)) params.p_size = pager.getSize();\n      } // let searcher = Utils.isFunction(this.getSearcher) && this.getSearcher();\n      // if (searcher && Utils.isFunction(searcher.getParams)) {\n      // \tparams = $.extend(params, searcher.getParams());\n      // }\n\n\n      this.load(apiName, params, function () {\n        setTimeout(function () {\n          tryAutoSelect.call(_this3);\n        });\n      });\n    }\n  }; // 组件初始化时，异步加载完成后，自动选择列表项\n\n\n  var tryAutoSelect = function tryAutoSelect() {\n    var _this4 = this;\n\n    var setByIndex = function setByIndex(value) {\n      if (Utils.isFunction(_this4.setSelectedIndex)) {\n        _this4.setSelectedIndex(value);\n      }\n    };\n\n    var setById = function setById(value) {\n      if (Utils.isFunction(_this4.setSelectedKey)) {\n        _this4.setSelectedKey(value);\n      }\n    };\n\n    var options = this.options || {};\n    if (options.hasOwnProperty(\"selectedIndex\")) setByIndex(options.selectedIndex);else if (Utils.isNotBlank(this.$el.attr(\"data-tryindex\"))) setByIndex(this.$el.attr(\"data-tryindex\"));else if (options.hasOwnProperty(\"selectedId\")) setById(options.selectedId);else if (Utils.isNotBlank(this.$el.attr(\"data-tryid\"))) setById(this.$el.attr(\"data-tryid\"));\n    delete options.selectedIndex;\n    delete options.selectedId;\n    this.$el.removeAttr(\"data-tryindex\");\n    this.$el.removeAttr(\"data-tryid\");\n  };\n})(typeof window !== \"undefined\");","// 2019-04-15\n(function (frontend) {\n  if (frontend && VRender.Component.ui) return;\n  var Utils = frontend ? VRender.Utils : require(\"\" + __vrender__).Utils; ///////////////////////////////////////////////////////\n\n  var Fn = {}; // 组件数据适配转换，支持数组对象\n\n  Fn.doAdapter = function (data, index) {\n    if (data && data._vr_adapter_flag) return data;\n    var adapter = this.options.dataAdapter || this.options.adapter;\n    if (Utils.isFunction(this.getDataAdapter)) adapter = this.getDataAdapter();\n\n    if (Utils.isFunction(adapter)) {\n      data = adapter(data, index);\n      if (data) data._vr_adapter_flag = true;\n    }\n\n    return data;\n  }; // 获取数据的编号\n\n\n  Fn.getDataKey = function (data) {\n    if (Utils.isBlank(data)) return null;\n    if (Utils.isPrimitive(data)) return data;\n    var keyField = this.options.keyField;\n    if (Utils.isFunction(this.getKeyField)) keyField = this.getKeyField();\n    if (Utils.isNotBlank(keyField)) return data[keyField];\n    if (data.hasOwnProperty(\"id\")) return data.id;\n    if (data.hasOwnProperty(\"code\")) return data.code;\n    if (data.hasOwnProperty(\"value\")) return data.value;\n    return null;\n  }; // 获取数据的显示文本\n\n\n  Fn.getDataLabel = function (data, index) {\n    var labelFunction = this.options.labelFunction;\n    if (Utils.isFunction(this.getLabelFunction)) labelFunction = this.getLabelFunction();\n    if (Utils.isFunction(labelFunction)) return labelFunction.call(this, data, index);\n    if (Utils.isBlank(data)) return \"\";\n    if (Utils.isPrimitive(data)) return \"\" + data;\n    var labelField = this.options.labelField;\n    if (Utils.isFunction(this.getLabelField)) labelField = this.getLabelField();\n    if (Utils.isNotBlank(labelField)) return Utils.isNull(data[labelField]) ? \"\" : data[labelField];\n    if (data.hasOwnProperty(\"label\")) return Utils.isNull(data.label) ? \"\" : data.label;\n    if (data.hasOwnProperty(\"name\")) return Utils.isNull(data.name) ? \"\" : data.name;\n    if (data.hasOwnProperty(\"value\")) return Utils.isNull(data.value) ? \"\" : data.value;\n    return \"\" + data;\n  }; // 获取数据的属性映射对象，组件数据经过映射后才返回给客户端，可以有效保证数据的私密性\n  // 映射对象将被添加到组件标签的属性中，前端可以通过 this.$el.data() 获取\n\n\n  Fn.getMapData = function (data) {\n    var mapper = this.options.dataMapper || this.options.mapper;\n    if (Utils.isFunction(this.getDataMapper)) mapper = this.getDataMapper();\n    if (Utils.isFunction(mapper)) return mapper(data);\n    if (Utils.isNull(data)) return null;\n    if (Utils.isPrimitive(data)) return data;\n    var attrs = {};\n    if (data.hasOwnProperty(\"id\")) attrs[\"id\"] = data.id;\n    if (data.hasOwnProperty(\"code\")) attrs[\"code\"] = data.code;\n    if (data.hasOwnProperty(\"name\")) attrs[\"name\"] = data.name;\n    if (data.hasOwnProperty(\"value\")) attrs[\"value\"] = data.value;\n    if (data.hasOwnProperty(\"label\")) attrs[\"label\"] = data.label;\n    return attrs;\n  };\n\n  Fn.isMultiple = function () {\n    if (this.options.hasOwnProperty(\"multiple\")) return Utils.isTrue(this.options.multiple);\n    return Utils.isTrue(this.options.multi);\n  }; // 在元素标签上渲染数据，以 “data-” 属性方式添加\n\n\n  Fn.renderData = function (target, data) {\n    if (Utils.isFunction(this.getMapData)) data = this.getMapData(data);\n\n    if (data) {\n      if (Utils.isPrimitive(data)) {\n        target.attr(\"data-v\", data);\n      } else {\n        for (var n in data) {\n          target.attr(\"data-\" + n, Utils.trimToEmpty(data[n]));\n        }\n      }\n    }\n  }; // 渲染接口定义的方法，仅服务端有效，服务端定义的接口方法可在前端获取到\n\n\n  Fn.renderFunction = function (target, name, fn) {\n    if (!frontend && Utils.isNotBlank(name) && Utils.isFunction(fn)) {\n      target.write(\"<div class='ui-fn' style='display:none' name='\" + name + \"' fn-state='\" + (fn._state || \"\") + \"' fn-data='\" + (fn._data || \"\") + \"'>\" + escape(fn) + \"</div>\");\n    }\n  }; // 获取接口定义方法，能获取服务端定义的方法\n  // 优先获取前端定义或赋值的方法：options.fn > component.fn > serverside.fn\n\n\n  Fn.getFunction = function (name, type) {\n    if (this.options.hasOwnProperty(name)) return this.options[name];\n    if (this.hasOwnProperty(name)) return this[name];\n    if (type && this.options.hasOwnProperty(type)) return this.options[type];\n    var func = null;\n    var target = this.$el.children(\".ui-fn[name='\" + (type || name) + \"']\");\n\n    if (target && target.length > 0) {\n      func = target.text();\n\n      if (Utils.isNotBlank(func)) {\n        func = new Function(\"var Utils=VRender.Utils;return (\" + unescape(func) + \");\")();\n        func._state = target.attr(\"fn-state\") || null;\n        func._data = target.attr(\"fn-data\") || null;\n\n        if (func._data) {\n          try {\n            func._data = JSON.parse(func._data);\n          } catch (e) {}\n        }\n      }\n\n      target.remove();\n    }\n\n    this[name] = func;\n    return func;\n  }; // 渲染子视图\n\n\n  Fn.renderSubView = function (target, view) {\n    if (view) {\n      if (Utils.isFunction(view.render)) view.render(target);else target.append(view.$el || view);\n    }\n  }; // 异步数据加载方法\n\n\n  Fn.load = function (api, params, callback) {\n    var _this = this;\n\n    api = api || this.lastLoadApi || this.$el.attr(\"api-name\");\n    if (Utils.isBlank(api)) return false;\n    var target = this.$el.addClass(\"is-loading\");\n    var timerId = this.loadTimerId = Date.now();\n    Component.load.call(this, api, params, function (err, data) {\n      if (timerId == _this.loadTimerId) {\n        target.removeClass(\"is-loading\");\n\n        var pager = Utils.isFunction(_this.getPaginator) && _this.getPaginator();\n\n        if (pager && Utils.isFunction(pager.set)) {\n          var pageInfo = _this._pageInfo || {};\n          pager.set(pageInfo.total, pageInfo.page, pageInfo.size);\n        }\n\n        if (Utils.isFunction(callback)) callback(err, data);\n      }\n    });\n    return true;\n  }; // 解析并返回一个整数数组，忽略无效数据\n  // 参数可以是数组（[1,2,3]）或逗号分隔的字符串（\"1,2,3\"）\n\n\n  Fn.getIntValues = function (value, min, max) {\n    if (!Utils.isArray(value)) value = Utils.isBlank(value) ? [] : (\"\" + value).split(\",\");\n    min = Utils.isNull(min) ? Number.NEGATIVE_INFINITY : min;\n    max = Utils.isNull(max) ? Number.POSITIVE_INFINITY : max;\n    var values = [];\n    Utils.each(value, function (val) {\n      if (!isNaN(val)) {\n        val = parseInt(val);\n\n        if (!isNaN(val) && values.indexOf(val) < 0) {\n          if (val >= min && val <= max) values.push(val);\n        }\n      }\n    });\n    return values;\n  }; // 判断2个索引是否一致，包括多选的情况\n  // 参数可以是数组（[1,2,3]）或逗号分隔的字符串（\"1,2,3\"）\n\n\n  Fn.equalIndex = function (index1, index2) {\n    index1 = Fn.getIntValues(index1, 0);\n    index2 = Fn.getIntValues(index2, 0);\n    if (index1.length != index2.length) return false;\n    index1.sort(function (a, b) {\n      return a - b;\n    });\n    index2.sort(function (a, b) {\n      return a - b;\n    });\n\n    for (var i = 0, l = index1.length; i < l; i++) {\n      if (index1[i] != index2[i]) return false;\n    }\n\n    return true;\n  }; // 快照\n\n\n  Fn.snapshoot = function () {\n    var state = {},\n        newState = {},\n        self = this;\n    var _snapshoot = {};\n    if (!this._rootSnapshoot) this._rootSnapshoot = _snapshoot;\n\n    _snapshoot.shoot = function (_state, args) {\n      _state = _state || state;\n\n      if (Utils.isFunction(self._snapshoot_shoot)) {\n        var params = Array.prototype.slice.call(arguments);\n        params[0] = _state;\n\n        self._snapshoot_shoot.apply(self, params);\n      } else {\n        _state.data = self.getData();\n      }\n    };\n\n    _snapshoot.compare = function (args) {\n      var params = Array.prototype.slice.call(arguments);\n\n      if (Utils.isFunction(self._snapshoot_compare)) {\n        return self._snapshoot_compare.apply(self, [state].concat(params));\n      } else {\n        this.shoot.apply(this, [newState].concat(params));\n        return state.data == newState.data;\n      }\n    };\n\n    _snapshoot.done = function (args) {\n      var hasChanged = false;\n\n      if (self._rootSnapshoot == this) {\n        var params = Array.prototype.slice.call(arguments);\n\n        if (!this.compare.apply(this, params)) {\n          this.shoot.apply(this, [newState].concat(params));\n          if (Utils.isFunction(self._snapshoot_change)) self._snapshoot_change(newState.data, state.data);\n          self.trigger(\"change\", newState.data, state.data);\n          self.$el.trigger(\"change\", newState.data, state.data);\n          hasChanged = true;\n        }\n      }\n\n      this.release();\n      return hasChanged;\n    };\n\n    _snapshoot.release = function () {\n      if (self._rootSnapshoot == this) self._rootSnapshoot = null;\n    };\n\n    _snapshoot.getState = function () {\n      return state;\n    };\n\n    _snapshoot.shoot(state);\n\n    newState.data = state.data;\n    return _snapshoot;\n  };\n\n  Fn.getDropdownHeight = function (target, maxHeight) {\n    var height = 0;\n\n    if (this._isRenderAsApp()) {\n      height = $(window).height() * 0.8;\n    } else {\n      height = parseInt(target.css(\"maxHeight\")) || maxHeight || 300;\n    }\n\n    var scrollHeight = target.get(0).scrollHeight;\n    if (height > scrollHeight) height = scrollHeight;\n    return height;\n  };\n\n  Fn.mouseDebounce = function (event, handler) {\n    var target = $(event.currentTarget);\n    var timerId = parseInt(target.attr(\"timerid\"));\n\n    if (timerId) {\n      clearTimeout(timerId);\n      target.removeAttr(\"timerid\");\n    }\n\n    if (event.type == \"mouseleave\") {\n      timerId = setTimeout(function () {\n        target.removeAttr(\"timerid\");\n        handler();\n      }, 500);\n      target.attr(\"timerid\", timerId);\n    }\n  }; // ====================================================\n\n\n  if (frontend) {\n    var VComponent = VRender.Component; // 注册前端组件\n\n    Fn.init = function (selector, UIComp, Renderer) {\n      VComponent.register(selector, UIComp);\n\n      UIComp.create = function (options) {\n        return VComponent.create(options, UIComp, Renderer);\n      };\n\n      UIComp.find = function (view) {\n        return VComponent.find(view, selector, UIComp);\n      };\n\n      UIComp.findMe = function (view) {\n        var comps = VComponent.find(view, selector, UIComp);\n        return comps && comps[0] || null;\n      };\n\n      UIComp.instance = function (target) {\n        return VComponent.instance(target, selector);\n      };\n\n      UIComp.prototype._create = function (options) {\n        options = options || {};\n        if (Utils.isFunction(this.isWidthEnabled)) options.widthDisabled = !this.isWidthEnabled();\n        if (Utils.isFunction(this.isHeightEnabled)) options.heightDisabled = !this.isHeightEnabled();\n        return VComponent.create(options, null, Renderer);\n      };\n    }; // 判断是不是页面元素（包括 jQuery 对象）\n\n\n    Fn.isElement = function (target) {\n      return target instanceof Element || target instanceof $;\n    };\n  } ///////////////////////////////////////////////////////\n\n\n  if (frontend) {\n    VRender.Component.ui = {\n      util: Utils,\n      fn: Fn\n    };\n    VRender.Component.ui.init = Fn.init;\n  } else {\n    exports.util = Utils;\n    exports.fn = Fn;\n\n    require(\"./base\");\n\n    require(\"./items\");\n\n    require(\"./selectable\");\n  }\n})(typeof window !== \"undefined\");","// 2019-04-18\n(function (frontend) {\n  if (frontend && VRender.Component.ui._items) return;\n  var UI = frontend ? VRender.Component.ui : require(\"./init\"); ///////////////////////////////////////////////////////\n\n  var UIItems = UI._items = function (context, options) {};\n\n  var _UIItems = UIItems.prototype = new Object(); ///////////////////////////////////////////////////////\n\n\n  var Renderer = UI._itemsRender = function (context, options) {};\n\n  var _Renderer = Renderer.prototype = new Object();\n})(typeof window !== \"undefined\");","// 2019-04-18\n(function (frontend) {\n  if (frontend && VRender.Component.ui._select) return;\n  var UI = frontend ? VRender.Component.ui : require(\"./init\"); ///////////////////////////////////////////////////////\n\n  var UISelect = UI._select = function (content, options) {};\n\n  var _UISelect = UISelect.prototype = new Object(); ///////////////////////////////////////////////////////\n\n\n  var Renderer = UI._selectRender = function (context, options) {};\n\n  var _Renderer = Renderer.prototype = new Object();\n})(typeof window !== \"undefined\");"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClzbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}